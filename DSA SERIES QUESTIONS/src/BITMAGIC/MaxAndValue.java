package BITMAGIC;

import ARRAYS.ArrayInput;

public class MaxAndValue {
//***
    /*
    Given an array arr[] of N positive elements. The task is to find the Maximum AND Value generated by any pair(arri, arrj) from the array such that i != j.
Note: AND is bitwise '&' operator.

Input:
N = 4
arr[] = {4, 8, 12, 16}
Output: 8
Explanation:
Pair (8,12) has the Maximum AND Value 8.
    * */
    public static int maxAND (int arr[], int N) {
        int res=0;int count;
        // Your code here
        // You can add extra function (if required)
        for(int i=31;i>=0;i--){
            count = checkBit(res|(1<<i),arr,N);
            if(count>=2){
                res = res|(1<<i);
            }
        }
        return res;


    }
    static int checkBit(int pattern,int arr[],int n){
        int count =0;
        for(int i=0;i<n;i++){
            if((pattern&arr[i])==pattern){
                count++;
            }
        }
        return count;
    }

    public static void main(String[] args) {
        ArrayInput ar = new ArrayInput();
        int n = 10;
        int[] arr = ar.createArray(n);
        System.out.println(maxAND(arr,n));
    }
}
//8 12 16 4 11 12 220 2 23 45